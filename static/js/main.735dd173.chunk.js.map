{"version":3,"sources":["components/slideshow.js","components/Entregas.js","components/header.js","firebase.js","components/context/ordercontext.js","components/context/countcontext.js","components/counter.js","components/cardProducts.js","components/Accordion.js","components/context/finalordercontx.js","components/modalList.js","components/floatbutton.js","App.js","serviceWorker.js","index.js"],"names":["Slideshow","id","Carousel","Item","className","src","alt","Caption","Entregas","icon","faMapMarkedAlt","Header","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","orderContext","createContext","OrderProvider","props","useState","listorder","setListOrders","Provider","value","children","countContext","CountProvider","countOrder","setCountOrder","Counter","counter","setCounter","useContext","ordercount","setOrderCount","onClick","orden","nombre","nombreplat","cantidad","precio","precioplat","total","length","concat","encontrado","find","item","prevOrders","parseInt","cant","faPlus","arrordenes","console","log","indice","indexOf","splice","faMinus","CardProducts","datos","map","comida","Accordion","Collapse","eventKey","evento","urlimagen","style","float","descripcion","AccordionCards","datosComidas","comidas","bebidas","extras","foods","setComidas","drinks","setDrinks","setExtras","useEffect","referencia","ref","on","snapshot","allComidas","forEach","snap","push","val","getData","alldrinks","getDataDrinks","allextras","getDataExtras","defaultActiveKey","Card","Toggle","as","Button","finalorderContx","FinalordProvider","nombrecliente","domicilio","comentarios","finalorder","setFinalOrder","ModalList","changeData","e","target","name","Modal","class","Body","plato","costofinal","type","placeholder","onChange","rows","FloatButton","cost","setCost","show","setShow","temporders","finalcost","faUtensils","Footer","emojifood","String","fromCodePoint","emojihello","emojimoney","emojiclient","emojilocation","emojicomment","emojispark","mensaje","product","urlp2","urlp1","window","open","enviaOrden","setTimeout","location","reload","App","Container","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.735dd173.chunk.js","sourcesContent":["import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport './slideshow.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Slideshow = () =>{\r\n    return(\r\n    <div>\r\n        <div id=\"div-promos-title\">\r\n            <h3 id=\"promostext\">Promociones</h3>\r\n        </div>\r\n    <Carousel>\r\n          <Carousel.Item>\r\n              <div className=\"divimg\">\r\n                <img\r\n                className=\"d-block w-100 imgpromo\"\r\n                src=\"assets/img/combocla.jpg\"\r\n                alt=\"Third slide\"\r\n                />\r\n              </div>\r\n                <Carousel.Caption>\r\n                <h3 className=\"titulo-promo\">¡Combo Clásico $45.00!</h3>\r\n                <p className=\"subtitulo\">Solo de lunes a Viernes</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <div className=\"divimg\">\r\n                <img\r\n                className=\"d-block w-100 imgpromo\"\r\n                src=\"assets/img/papasxd.jpg\"\r\n                alt=\"Third slide\"\r\n                />\r\n                </div>\r\n                <Carousel.Caption>\r\n                <h3 className=\"titulo-promo\">¡Orden de papas 2x1!</h3>\r\n                <p className=\"subtitulo\">En la compra de dos combos</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n                <div className=\"divimg\">\r\n                <img\r\n                className=\"d-block w-100 imgpromo\"\r\n                src=\"assets/img/comboam.jpeg\"\r\n                alt=\"Third sside\"\r\n                />\r\n                </div>\r\n                <Carousel.Caption>\r\n                <h3 className=\"titulo-promo\">¡Promo amigos!</h3>\r\n                <p className=\"subtitulo\">Sabados apartir de las 8 pm</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n        </Carousel>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Slideshow;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkedAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport './Entregas.css';\r\n\r\nconst Entregas = () =>{\r\n    return(\r\n        <div>\r\n            <div className=\"mt-3 container-zonas container mt-3\">\r\n            <FontAwesomeIcon icon={faMapMarkedAlt} className=\"mr-3 icono-zona\"/>\r\n            <h4 className=\"heading-5 d-inline\" id=\"zonastext\">Zonas de entrega</h4>\r\n            </div>\r\n            <ul className=\"text-light mt-3 lead text-center\">\r\n                <li>Colonia \"Rosales\"</li>\r\n                <li>Pedregal de las lomas</li>\r\n                <li>Zona centro</li>\r\n                <li>Bosques de las lomas</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Entregas;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"myheader mb-2\">\r\n            <img src=\"assets/img/logogrill.png\" alt=\"logo\" className=\"float\" id=\"logo-rest\"></img>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAC5x5oh15Zehg1suwDSdwPWctZCDnWxFM\",\r\n    authDomain: \"practicamoskalia.firebaseapp.com\",\r\n    databaseURL: \"https://practicamoskalia.firebaseio.com\",\r\n    projectId: \"practicamoskalia\",\r\n    storageBucket: \"practicamoskalia.appspot.com\",\r\n    messagingSenderId: \"837319075731\",\r\n    appId: \"1:837319075731:web:608987f397d89890256a66\",\r\n    measurementId: \"G-PPRHPHS7DK\"\r\n  };\r\n  \r\nconst fb = firebase.initializeApp(firebaseConfig);\r\nexport default fb;\r\nexport const db = firebase.database();\r\n","import React , {useState, createContext} from 'react';\r\n\r\nexport const orderContext =  createContext();\r\n\r\nexport const OrderProvider = (props) => {\r\n\r\n\r\n    const [listorder, setListOrders] = useState([]);\r\n\r\n    return(\r\n        <orderContext.Provider value={[listorder, setListOrders]}>\r\n            {props.children}\r\n        </orderContext.Provider>\r\n    );\r\n}\r\n\r\n","import React , {useState, createContext} from 'react';\r\n\r\nexport const countContext =  createContext();\r\n\r\nexport const CountProvider = (props) => {\r\n\r\n\r\n    const [countOrder, setCountOrder] = useState(0);\r\n\r\n    return(\r\n        <countContext.Provider value={[countOrder, setCountOrder]}>\r\n            {props.children}\r\n        </countContext.Provider>\r\n    );\r\n}\r\n\r\n","import React, {useState, useContext} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus , faMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './couter.css'\r\nimport {orderContext} from  './context/ordercontext';\r\nimport {countContext} from  './context/countcontext';\r\n\r\nconst Counter = (props) => {\r\n\r\n    const [counter, setCounter] = useState(0);\r\n    const [listorder, setListOrders] = useContext(orderContext);\r\n    const [ordercount, setOrderCount]  = useContext(countContext);\r\n\r\n\r\n    function addItem(){\r\n        setCounter(counter+1);\r\n        setOrderCount(ordercount+1);\r\n        var orden = {nombre:props.nombreplat, cantidad:counter+1 , precio: props.precioplat, total:props.precioplat};\r\n        if(listorder.length<=0){\r\n            setListOrders(listorder.concat(orden));\r\n        }else{\r\n            var arrordenes = listorder;\r\n            let  encontrado = arrordenes.find(item => item.nombre === props.nombreplat);\r\n            if(encontrado == null){   \r\n                setListOrders(prevOrders => [...prevOrders, orden]);\r\n            }else{\r\n                encontrado.cantidad = counter+1;\r\n                var precio = parseInt(encontrado.precio);\r\n                var cant = encontrado.cantidad;\r\n                encontrado.total = cant * precio;\r\n            }\r\n        }\r\n    }\r\n\r\n    function removeItem(){\r\n        if(counter<=0){\r\n            setCounter(0);\r\n        }else{\r\n            setCounter(counter-1);\r\n            setOrderCount(ordercount-1);\r\n            var arrordenes = listorder;\r\n            let  encontrado = arrordenes.find(item => item.nombre === props.nombreplat);\r\n            if(encontrado == null){\r\n                console.log('nothing');\r\n            }else{\r\n                encontrado.cantidad = counter-1;\r\n                var precio = parseInt(encontrado.precio);\r\n                var cant = encontrado.cantidad;\r\n                encontrado.total = cant * precio;\r\n                if(encontrado.cantidad <=0){\r\n                    var indice = arrordenes.indexOf(encontrado);\r\n                    console.log(indice);\r\n                    arrordenes.splice(indice, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n    <div id=\"mainboton\">\r\n    <button className=\"mr-2\" id=\"botonmas\" onClick={addItem}>\r\n        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n    </button>\r\n    <strong className=\"mr-2 font-weight-bold\" id=\"cantidad\">{counter}</strong>\r\n    <button className=\"d-inline-block\" id=\"boton2\" onClick={removeItem}>\r\n    <FontAwesomeIcon icon={faMinus}></FontAwesomeIcon>\r\n    </button>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Counter from './counter';\r\nimport './cardProducts.css';\r\n\r\nconst CardProducts = (props) => {\r\n    \r\n    return(\r\n        <div>\r\n            {props.datos.map(comida => {\r\n                return( \r\n                    <Accordion.Collapse eventKey={props.evento}>\r\n                        <div className=\"card mb-3\" id=\"card-individual\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 container\">\r\n                                <img src={comida.urlimagen} className=\"img-fluid\" alt=\"imagen del plato\" id=\"prodimg\"></img>\r\n                            </div>\r\n                            <div className=\"col-md-8\">\r\n                                <div className=\"container col-12 mt-2\" id=\"divname\">\r\n                                    <h6 className=\"card-title text-dark comida-nombre\" style={{float:\"left\"}}>{comida.nombre}</h6>\r\n                                     <p className=\"lead\" id=\"prec-plat\">${comida.precio}.00</p>\r\n                                </div>\r\n                            <div className=\"col-12 d-block\">\r\n                            <small className=\"text-justify align-content-center d-block\" id=\"desc-plat\">{comida.descripcion}</small>\r\n                            </div>\r\n                            <Counter nombreplat={comida.nombre} precioplat={comida.precio}></Counter>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </Accordion.Collapse>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CardProducts;","import React, {useState, useEffect} from 'react';\r\nimport { db } from \"../firebase\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport './Accordion.css';\r\n//MY IMPORTS\r\nimport CardProducts from './cardProducts';\r\n\r\nconst AccordionCards = () => {\r\n\r\n  const datosComidas = {\r\n    comidas: [],\r\n    bebidas: [],\r\n    extras: []\r\n  }\r\n  const [foods, setComidas] = useState(datosComidas);\r\n  const [drinks, setDrinks] = useState(datosComidas);\r\n  const [extras, setExtras] = useState(datosComidas);\r\n\r\n  function getData(referencia = ''){\r\n      db.ref(referencia).on(\"value\", snapshot =>{\r\n        let allComidas = [];\r\n        snapshot.forEach(snap=>{\r\n          allComidas.push(snap.val());\r\n        });\r\n        setComidas({comidas:allComidas})\r\n      })\r\n  }\r\n  function getDataDrinks(referencia = ''){\r\n      db.ref(referencia).on(\"value\", snapshot =>{\r\n        let alldrinks = [];\r\n        snapshot.forEach(snap=>{\r\n          alldrinks.push(snap.val());\r\n        });\r\n        setDrinks({bebidas:alldrinks})\r\n      })\r\n  }\r\n  function getDataExtras(referencia = ''){\r\n      db.ref(referencia).on(\"value\", snapshot =>{\r\n        let allextras = [];\r\n        snapshot.forEach(snap=>{\r\n          allextras.push(snap.val());\r\n        });\r\n        setExtras({extras:allextras})\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n      getData('platillos');\r\n      getDataDrinks('bebidas');\r\n      getDataExtras('extras');\r\n  },[])\r\n\r\n  var eventfoods = \"0\";\r\n  var eventextras = \"1\";\r\n  var eventobebidas = \"2\";\r\n\r\n    return(\r\n        <div>\r\n        <Accordion defaultActiveKey=\"0\">\r\n        <Card className=\"card-main\">\r\n        <Card.Header>\r\n        <Accordion.Toggle as={Button} eventKey=\"0\" id=\"toggle-acc\">\r\n        <h4 id=\"sec-title\">Comidas</h4>\r\n        </Accordion.Toggle>\r\n          <CardProducts datos = {foods.comidas} evento={eventfoods}></CardProducts>\r\n        </Card.Header>\r\n        </Card>\r\n        <Card className=\"card-main\">\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} eventKey=\"1\" id=\"toggle-acc\" >\r\n              <h4 id=\"sec-title\">Complementos</h4>\r\n            </Accordion.Toggle>\r\n            <CardProducts datos = {extras.extras} evento={eventextras}></CardProducts>\r\n          </Card.Header>\r\n        </Card>\r\n        <Card className=\"card-main\">\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button}  eventKey=\"2\" id=\"toggle-acc\">\r\n              <h4 id=\"sec-title\">Bebidas</h4>\r\n            </Accordion.Toggle>\r\n            <CardProducts datos = {drinks.bebidas} evento={eventobebidas}></CardProducts>\r\n          </Card.Header>\r\n        </Card>\r\n        </Accordion>\r\n        </div>\r\n\r\n    );\r\n\r\n   \r\n}\r\n\r\nexport default AccordionCards;","import React , {useState, createContext} from 'react';\r\n\r\nexport const finalorderContx =  createContext();\r\n\r\nexport const FinalordProvider = (props) => {\r\n\r\n\r\n    const [finalorder, setFinalOrder] = useState({\r\n        nombrecliente:'',\r\n        domicilio: '',\r\n        comentarios: '',\r\n    });\r\n\r\n    return(\r\n        <finalorderContx.Provider value={[finalorder, setFinalOrder]}>\r\n            {props.children}\r\n        </finalorderContx.Provider>\r\n    );\r\n}\r\n\r\n","import React, {useContext}  from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './modalList.css';\r\n\r\nimport {orderContext} from  './context/ordercontext';\r\nimport {finalorderContx} from './context/finalordercontx';\r\n\r\n\r\nconst ModalList = (props) => {\r\n\r\n    const [finalorder, setFinalOrder] = useContext(finalorderContx);\r\n    const [listorder, setListOrders] = useContext(orderContext);\r\n\r\n    const changeData = (e) => {\r\n        const{name,value} = e.target;\r\n        setFinalOrder({...finalorder, [name]:value});\r\n    }\r\n\r\n    \r\n    var arrorders = [];\r\n    arrorders = listorder;\r\n\r\n    if(arrorders.length <= 0){\r\n        return(\r\n            <div>\r\n            <Modal.Header className=\"modalHeader\">\r\n                <h3 class=\"modal-title w-100 text-center\">Tu orden</h3>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <p className=\"lead text-center\" >Orden vacía :(</p>\r\n            </Modal.Body>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n        <div>\r\n                <Modal.Header className=\"modalHeader\">\r\n                    <h3 class=\"modal-title w-100 text-center\">Tu orden</h3>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                    <div>\r\n                        <ul className=\"mt-2\">\r\n                        {listorder.map(plato => {\r\n                            return(\r\n                            <li className=\"text-dark\">{plato.cantidad}x  {plato.nombre} .......... ${plato.total}.00</li>\r\n                            )\r\n                        })}\r\n                        </ul>\r\n                        <small className=\"lead totaltext\">Total: ${props.costofinal}.00</small>\r\n                        <br/>\r\n                    </div>\r\n                        <p className=\"text-dark mt-3\">Detalles de la orden:</p>\r\n                        <div className=\"form-group formdatos\">\r\n                            <input \r\n                                className=\"form-control col-12 mb-2\" \r\n                                type=\"text\" \r\n                                placeholder=\"Nombre\" \r\n                                onChange={changeData} \r\n                                name=\"nombrecliente\"\r\n                            />\r\n                            <input \r\n                                className=\"form-control col-12 inputdomilicio mb-2\" \r\n                                type=\"text\" \r\n                                placeholder=\"Domicilio (calle , colonia, número)\" \r\n                                onChange={changeData} \r\n                                name=\"domicilio\"\r\n                            />\r\n                            <textarea \r\n                                className=\"form-control comentarea\" \r\n                                placeholder=\"Comentarios. Ej: Sin cebolla, sin hielo, etc. (opcional)\" \r\n                                rows=\"3\" \r\n                                onChange={changeData} \r\n                                name=\"comentarios\"\r\n                            />\r\n                        </div>\r\n                </Modal.Body>\r\n                    </div> \r\n        )\r\n    }\r\n}  \r\n\r\nexport default ModalList;","import React, {useState, useContext} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './floatbutton.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUtensils } from '@fortawesome/free-solid-svg-icons'\r\nimport ModalList from './modalList';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport {countContext} from  './context/countcontext';\r\nimport {orderContext} from  './context/ordercontext';\r\nimport {finalorderContx} from  './context/finalordercontx';\r\n\r\n\r\nconst FloatButton = () => {\r\n\r\n    const [countOrder, setCountOrder] = useContext(countContext);\r\n    const [listorder, setListOrders] = useContext(orderContext);\r\n    const [finalorder, setFinalOrder] = useContext(finalorderContx);\r\n    const [cost, setCost] = useState(0);\r\n\r\n    const [show, setShow] = useState(false);\r\n    //const handleShow = () => setShow(true);\r\n    const handleShow = () =>{\r\n        setShow(true);\r\n        var orderstemp = listorder;\r\n        var finalcost = 0;\r\n        orderstemp.map(item => {\r\n            finalcost = finalcost + parseInt(item.total);\r\n            if(finalcost>0){\r\n                setCost(finalcost);\r\n            }else{\r\n                setCost(0);\r\n            }\r\n        })\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    function enviaOrden(){\r\n        let emojifood = String.fromCodePoint(0x1F37D);\r\n        let emojihello = String.fromCodePoint(0x1F44B);\r\n        let emojimoney = String.fromCodePoint(0x1F4B8);\r\n        let emojiclient = String.fromCodePoint(0x1F464);\r\n        let emojilocation = String.fromCodePoint(0x1F4CC);\r\n        let emojicomment = String.fromCodePoint(0x1F4AC);\r\n        let emojispark = String.fromCodePoint(0x2728);\r\n        let mensaje = emojihello + ' ' + '¡Hola Restaurante! Esta es mi orden: ' + '%0A%0D';\r\n        \r\n        let arrproducts = listorder;\r\n        arrproducts.map(product => {\r\n            mensaje += '%0A%0D' + emojifood + product.cantidad + 'x' + ' ' + product.nombre + ' - ' + '$' + product.total;\r\n        });\r\n        var urlp1 = 'https://api.whatsapp.com/send?phone=527443496943&text=' + mensaje +  '%0A%0D';\r\n        var urlp2 = urlp1 + emojimoney + ' Total: ' + '$' +cost + '%0A%0D' + '%0A%0D'\r\n                    + 'Datos de envío: ' + '%0A%0D' + emojiclient +' Nombre del cliente: ' \r\n                    + finalorder.nombrecliente + '%0A%0D' + emojilocation +' Dirección de envío: ' + \r\n                    finalorder.domicilio + '%0A%0D' + emojicomment +' Comentarios: ' \r\n                    + finalorder.comentarios + '%0A%0D' + '¡Gracias!' + emojispark + '&data=&app_absent=';\r\n        console.log(mensaje);\r\n        window.open(urlp2);\r\n    }\r\n\r\n    const handleSendOrder = () => {\r\n        var letters = /^[A-Za-z]+$/;\r\n        /*if(finalorder.nombrecliente === '' || finalorder.domicilio === '' || \r\n         !finalorder.nombrecliente.match(letters)){\r\n            console.log('empty input');\r\n        }else{\r\n            enviaOrden();\r\n            setTimeout(function(){ window.location.reload() }, 3000);\r\n        }*/\r\n        if(finalorder.nombrecliente === '' || finalorder.domicilio === '' || \r\n            finalorder.nombrecliente === ' '){\r\n            console.log('empty input');\r\n        }else{\r\n            enviaOrden();\r\n            setTimeout(function(){ window.location.reload() }, 3000);\r\n        }\r\n    }\r\n\r\n    var temporders = [];\r\n    temporders = listorder;\r\n\r\n    return(\r\n        <div>\r\n            <button id=\"homestatic\"  onClick={handleShow}>\r\n            <FontAwesomeIcon icon={faUtensils} id=\"icon\"></FontAwesomeIcon>\r\n            <br></br>\r\n            <p id=\"smallnumber\">{countOrder}</p>\r\n            </button>\r\n                <Modal show={show} className=\"modalMain\">\r\n                    <ModalList costofinal={cost}></ModalList>\r\n                    <Modal.Footer>\r\n                    <button className=\"btnmodal\" \r\n                            onClick={handleClose} >\r\n                        Cerrar\r\n                    </button>\r\n                    {temporders.length>0 && \r\n                        <div>\r\n                            <button className=\"btnmodal btnordenar\" \r\n                            onClick={handleSendOrder}\r\n                            >\r\n                            Ordenar\r\n                            </button>\r\n                        </div>\r\n                    }\r\n                    </Modal.Footer>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FloatButton;","import React from 'react';\nimport './App.css';\nimport Slideshow from './components/slideshow';\nimport Entregas from './components/Entregas';\nimport Header from './components/header';\nimport Container from 'react-bootstrap/Container'\nimport AccordionCards from './components/Accordion';\nimport FloatButton from './components/floatbutton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {OrderProvider} from './components/context/ordercontext';\nimport {CountProvider} from './components/context/countcontext';\nimport {FinalordProvider} from './components/context/finalordercontx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n\n  return (\n    <OrderProvider>\n    <CountProvider>\n    <div className=\"App\">\n      <Container>\n        <Header></Header>\n        <Slideshow/>\n        <Entregas/>\n        <div className=\"container mt-4\" id=\"cont-menu\">\n          <h1 className=\"mt-3 display-4\" id=\"menutext\">Menú</h1>\n        </div>\n        <p id=\"pordena\" className=\"lead text-light\">¡Selecciona lo que quieras y ordena!</p>\n        <AccordionCards className=\"mt-3\"></AccordionCards>\n        <FinalordProvider>\n        <FloatButton></FloatButton>\n        </FinalordProvider>\n      </Container>\n    </div>\n    </CountProvider>\n    </OrderProvider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}